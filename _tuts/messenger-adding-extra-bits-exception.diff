diff --git a/config/packages/messenger.yaml b/config/packages/messenger.yaml
index b8bf9ba..1e6eae1 100644
--- a/config/packages/messenger.yaml
+++ b/config/packages/messenger.yaml
@@ -1,8 +1,13 @@
 framework:
     messenger:
+        default_bus: bus1
+        buses:
+            bus1: ~
+            bus2: ~
+
         transports:
             # Use the enqueue transport
-            async: 'enqueue://default?deliveryDelay=5000'
+            async: 'amqp://user:pass@localhost/messages'
 
         routing:
             # Route your messages to the transports
diff --git a/src/Controller/DefaultController.php b/src/Controller/DefaultController.php
index f05e112..eba8f3d 100644
--- a/src/Controller/DefaultController.php
+++ b/src/Controller/DefaultController.php
@@ -16,7 +16,7 @@ class DefaultController extends AbstractController
      */
     public function index(MessageBusInterface $bus)
     {
-        $message = new SmsNotification('First message!');
+        $message = new SmsNotification('First SMS Notification!');
 
 //        $transportConfig = (new TransportConfiguration())
 //            ->setDeliveryDelay(10000)
@@ -24,7 +24,7 @@ class DefaultController extends AbstractController
         //$bus->dispatch((new Envelope($message))->with($transportConfig));
         $bus->dispatch((new Envelope($message)));
 
-        $bus->dispatch(new SmsNotification('Second message'));
+        //$bus->dispatch(new SmsNotification('Second message'));
 
         return $this->json(['test' => true]);
     }
diff --git a/src/Message/SendEmail.php b/src/Message/SendEmail.php
new file mode 100644
index 0000000..f9b86f3
--- /dev/null
+++ b/src/Message/SendEmail.php
@@ -0,0 +1,7 @@
+<?php
+
+namespace App\Message;
+
+class SendEmail
+{
+}
diff --git a/src/MessageHandler/SendEmailHandler.php b/src/MessageHandler/SendEmailHandler.php
new file mode 100644
index 0000000..f01f5db
--- /dev/null
+++ b/src/MessageHandler/SendEmailHandler.php
@@ -0,0 +1,23 @@
+<?php
+
+namespace App\MessageHandler;
+
+use App\Message\SendEmail;
+use Psr\Log\LoggerInterface;
+use Symfony\Component\Messenger\Handler\MessageHandlerInterface;
+
+class SendEmailHandler implements MessageHandlerInterface
+{
+    private $logger;
+
+    public function __construct(LoggerInterface $logger)
+    {
+        $this->logger = $logger;
+    }
+
+    public function __invoke(SendEmail $email)
+    {
+        //throw new \Exception('BAAAAAR');
+        $this->logger->info('Sending email');
+    }
+}
diff --git a/src/MessageHandler/SmsNotificationHandler.php b/src/MessageHandler/SmsNotificationHandler.php
index 0e15ae4..a4e37ef 100644
--- a/src/MessageHandler/SmsNotificationHandler.php
+++ b/src/MessageHandler/SmsNotificationHandler.php
@@ -2,22 +2,34 @@
 
 namespace App\MessageHandler;
 
+use App\Message\SendEmail;
 use App\Message\SmsNotification;
 use Psr\Log\LoggerInterface;
+use Symfony\Component\Messenger\Envelope;
 use Symfony\Component\Messenger\Handler\MessageHandlerInterface;
+use Symfony\Component\Messenger\MessageBusInterface;
+use Symfony\Component\Messenger\Stamp\DispatchAfterCurrentBus;
 
 class SmsNotificationHandler implements MessageHandlerInterface
 {
     private $logger;
 
-    public function __construct(LoggerInterface $logger)
+    private $messageBus;
+
+    public function __construct(LoggerInterface $logger, MessageBusInterface $bus2)
     {
         $this->logger = $logger;
+        $this->messageBus = $bus2;
     }
 
     public function __invoke(SmsNotification $notification)
     {
-        throw new \Exception('I sploded!');
+        throw new \Exception();
+        $this->messageBus->dispatch(new Envelope(
+            new SendEmail()
+            //new DispatchAfterCurrentBus()
+        ));
+
         $this->logger->info($notification->getContent());
     }
 }
